{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Hybrid Proctor Documentation","text":"<p>Welcome to the Hybrid Proctor - ISC Exam System Documentation.</p>"},{"location":"index.html#overview","title":"Overview","text":"<p>This system provides a streamlined and secure platform for educators to administer examinations to students using their personal computers. </p> <p>The foundation of this system is a specialized router, which hosts the examination statement and any additional resources that the educator wishes to provide. Upon setup, students can connect to the router via WiFi, granting them access to a dedicated examination webpage while restricting them an internet access. </p> <p>From this webpage, students can download necessary resources and, upon completion, submit their work. The submitted files are then conveniently stored on the router, ready for educators to retrieve via SFTP.</p> <p></p>"},{"location":"blog/index.html","title":"Blog","text":""},{"location":"guide/index.html","title":"Guides","text":"<p>Read these guides to:</p> <ul> <li>Configurate and use the system for an examination.</li> <li>Setup a new router from scratch.</li> </ul> <p>Warning</p> <p>These guides are not up to date !</p>","tags":["guides"]},{"location":"guide/setup/index.html","title":"Setup Guide","text":"<p>You will need a Mikrotik router and a USB key with an ext4 partition.</p> <ol> <li>Power up router (don't forget to plug in the antenna!). Connect to your PC via ethernet cable.</li> <li>Install and start winBox, you should see your device listed.</li> <li>Login to it with the admin pwd written on the bottom of your device (admin/WBJ6PZ033W), now it should be admin/toto1234.</li> <li>(Optional) Install latest version of routerOS, you will need routerOS &gt; V7.5 to be able to run containers. This can be done from inside WinBox.</li> <li>Install the container.npk. Download the all_package zip corresponding to your hardware architecture and software version (check with /system/resource/print), extract and drop the container.npk into winBox and restart the router with /sys reboot. After restarting, you should see a new tab called container in WinBox.</li> <li>To activate the container feature, enter /system device-mode update container=yes in the terminal. Then press the reset button of the router when asked so.</li> </ol>","tags":["setup_guide"]},{"location":"guide/setup/index.html#network-setup","title":"Network setup","text":"<p>Open a terminal in winBox and run the following commands to setup the network stuff: </p><pre><code>/interface bridge\nadd name=dockers\n/ip address/\nadd address=172.17.0.1/24 interface=dockers network=172.17.0.0\nadd address=10.0.0.1/24 interface=wifi1 network=10.0.0.0\n/interface veth\nadd name=veth1 address=172.17.0.2/24 gateway=172.17.0.1\n/interface bridge port\nadd bridge=dockers interface=veth1\n</code></pre>","tags":["setup_guide"]},{"location":"guide/setup/index.html#container-setup","title":"Container setup","text":"<p>Normally, it's possible to simply build the image on a PC and then upload the .tar to the router via WinBox to create the container but it doesn't seem to work, so instead I published the image to dockerHub and then pulled the image from inside the router. Check the makefile to create and publish the docker image, you will need an account on dockerHub.</p> <p>The container has 2 volumes linked to the USB device. One to serve the html and the downloadable ressources, and the other to save uploaded files. This could be merged in the future to only have one mount point.</p> <p></p><pre><code>/container config\nset registry-url=https://registry-1.docker.io\nset tmpdir=usb1/pull\n/container/mounts/\nadd dst=/mount_point src=usb1/mount name=mount\nadd dst=/home/admin/upload src=usb1/uploads name=uploads\n/container\nadd remote-image=stevedevenes/hybridproctor-arm:latest interface=veth1 root-dir=usb1/hybridProctorContainer mounts=mount,uploads\n/ip firewall/nat\nadd chain=dstnat action=dst-nat protocol=tcp dst-port=80 to-ports=80 to-addresses=172.17.0.2 # frontend\nadd chain=dstnat action=dst-nat protocol=tcp dst-port=2222 to-ports=22 to-addresses=172.17.0.2 # sftp to upload container\nadd chain=dstnat action=dst-nat protocol=tcp dst-port=3000 to-ports=3000 to-addresses=172.17.0.2 # upload route\n</code></pre> Important: Don't forget to tick the \"start on boot\" option in container config. <p>Once done, you should be able to see the container with </p><pre><code>/container/pr\n</code></pre> and start it with  <pre><code>/container start &lt;container number&gt;\n</code></pre> You can also access it's shell with <pre><code>/container shell &lt;container number&gt;\n</code></pre>","tags":["setup_guide"]},{"location":"guide/setup/index.html#wifi-config","title":"Wifi config","text":"<pre><code>/interface wifiwave2 security\nadd authentication-type=wpa3-psk name=hybridProctor disabled=no\n/interface/wifiwave2/configuration/\nadd mode=ap name=hybridProctor security hybridProctor ssid=MThybridProctor\n/interface/wifiwave2/\nset [ find default-name=wifi1 ] configuration=hybridProctor disabled=no\nset wifi1 datapath.client-isolation=yes\n/ip pool\nadd name=pool0 ranges=10.0.0.10-10.0.0.100\n/ip dhcp-server\nadd address-pool=pool0 interface=wifi1 name dhcp1 server-address=10.0.0.1\n/ip/dhcp-server/network\nadd address=10.0.0.0/24 dns-server=10.0.0.1 gateway=10.0.0.1\n</code></pre> Note: If the last command throw an error mentionning slave interface, go to Brige/Ports and disable wifi1 form the list.","tags":["setup_guide"]},{"location":"guide/setup/index.html#dns-config","title":"DNS config","text":"<p>Doesn't seems to work, at least for the wifi IP.. </p><pre><code>/ip/dns\nset allow-remote-requests=yes\n/ip/dns/static\nadd name=exam.local address=10.0.0.1\n</code></pre>","tags":["setup_guide"]},{"location":"guide/setup/index.html#wifi-password","title":"Wifi password","text":"<p>This can be changed in Wifi menu, opening the wifi1 network pannel and then in Security. For now it is set to toto1234</p>","tags":["setup_guide"]},{"location":"guide/usage/index.html","title":"Usage Guide","text":"<ol> <li>Plug USB key in router and power up the later (don't forget to plug in the antenna!).</li> <li>Connect to it via wifi (password: toto_1234).</li> <li> <p>Connect to router via sftp to adapt the config for your exam. </p> <p></p><pre><code>sftp -P 2222 admin@10.0.0.1\n</code></pre> Here's what you can change: - The statement of your exam, replace /mount_point/html/exam.html. - The ressources to be downloaded by the students, put them in /mount_point/html/resources. Delete the content of the directory if you don't have any. - Optionally: The list of files the students have to submit. You can list these files in  /mount_point/html/config.yml, or disable the option. <p>Please, don't delete or modify any other files in /mount_point/html/.</p> </li> <li> <p>Go to 10.0.0.1 and check if your exam/resources are really there and if everything is working.</p> </li> <li>Students can then connect to router wifi and do the exam.</li> <li>Once finished, to access uploaded files, connect via sftp again. The files should be present in /home/admin/uploads. </li> </ol>","tags":["usage_guide"]},{"location":"router/index.html","title":"The router","text":"<p>Identifier:</p> <ul> <li>Router L009UiGS-2HaxD-IN 2.4 GHz ax dual-chain Wi-Fi</li> </ul> <p>This router, from Mikrotik, allows to create and manage containers natively. The only thing required is to plug an USB device to store the containers data as the Mikrotik doesn't have a lot of internal memory. </p> <p></p>"}]}